version: '3.7'

services:
  traefik:
    image: traefik:v2.4
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      # - "--entrypoints.websecure.address=:443"
      - "--providers.file.filename=/etc/traefik.yml"
      - "--log.level=DEBUG"
      # - "--metrics.prometheus=true"
      # - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--accesslog=true"
      - "--accesslog.filepath=/logs/access.log"
      - "--accesslog.format=json"
      - "--log.filePath=/logs/traefik.log"
    ports:
      - "80:80"
      - "8080:8080"
      # - "9090:9090"
      # - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./Logs:/logs"
      - "./configs/traefik.yml:/etc/traefik.yml:ro"
    networks:
      - traefik-net

  # traefik-redirector:
  #   image: nginx
  #   volumes:
  #     - "./redirect.conf:/etc/nginx/conf.d/default.conf"
  #   labels:
  #     - "traefik.enable=true"
  #     # - "traefik.http.routers.traefik-redirector.rule=PathPrefix(`/traefik`)"
  #     - "traefik.http.routers.traefik-redirector.entrypoints=web"
  #     # - "traefik.http.middlewares.traefik-redirector.stripprefix.prefixes=/traefik"
  #     - "traefik.http.routers.traefik-redirector.middlewares=traefik-redirector@docker"
  #   networks:
  #     - traefik-net

  

  # mongodb:
  #   image: mongo
  #   volumes:
  #     - "./mongodb-data:/data/db"
  #     - "./mongLogs:/logs"
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=admin
  #     - MONGO_INITDB_ROOT_PASSWORD=secret
  #   ports:
  #     - "27017:27017"
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "5"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.mongodb.rule=PathPrefix(`/mongodb`)"
  #     - "traefik.http.routers.mongodb.entrypoints=web"
  #     - "traefik.http.services.mongodb.loadbalancer.server.port=27017"
  #     - "traefik.http.middlewares.mongodb.stripprefix.prefixes=/mongodb"
  #     - "traefik.http.routers.mongodb.middlewares=mongodb@docker"


  # mongodb:
  #   image: mongo
  #   volumes:
  #     - "mongodbData:/data/db"
  #     - "./mongLogs:/logs"
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=root
  #     - MONGO_INITDB_ROOT_PASSWORD=example
  #   networks:
  #     - traefik-net
  #   labels:
  #     - "traefik.enable=false"  # Disable Traefik for MongoDB

  # prometheus:
  #   image: prom/prometheus
  #   ports:
  #     - "9090:9090"  # Remove port mapping here
  #   volumes:
  #     - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml  # Mount the config file
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.prometheus.rule=PathPrefix(`/prometheus`)"
  #     - "traefik.http.routers.prometheus.entrypoints=web"
  #     - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
  #   networks:
  #     - traefik-net
  
  # flask-app:
  #     build: ./FHE
  
  #     labels:
  #       - "traefik.enable=true"
  #       - "traefik.http.routers.flask-app.rule=PathPrefix(`/fhe`)"
  #       - "traefik.http.routers.flask-app.entrypoints=web"
  #       - "traefik.http.middlewares.strip-fhe.stripprefix.prefixes=/fhe"
  #       - "traefik.http.routers.flask-app.middlewares=strip-fhe"
  #       - "traefik.http.services.flask-app.loadbalancer.server.port=80"
  #     networks:
  #       - traefik-net


  apache1:
    image: httpd:2.4
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apache.rule=PathPrefix(`/apache`)"
      - "traefik.http.routers.apache.entrypoints=web"
      - "traefik.http.middlewares.strip-apache.stripprefix.prefixes=/apache"
      - "traefik.http.routers.apache.middlewares=strip-apache"
      - "traefik.http.services.apache.loadbalancer.server.port=80"
    volumes:
      - ./apacheTest1/html:/usr/local/apache2/htdocs
    networks:
      - traefik-net

  apache2:
    image: httpd:2.4
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apache.rule=PathPrefix(`/apache`)"
      - "traefik.http.routers.apache.entrypoints=web"
      - "traefik.http.middlewares.strip-apache.stripprefix.prefixes=/apache"
      - "traefik.http.routers.apache.middlewares=strip-apache"
      - "traefik.http.services.apache.loadbalancer.server.port=80"
    volumes:
      - ./apacheTest2/html:/usr/local/apache2/htdocs
    networks:
      - traefik-net

  apache3:
    image: httpd:2.4
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apache.rule=PathPrefix(`/apache`)"
      - "traefik.http.routers.apache.entrypoints=web"
      - "traefik.http.middlewares.strip-apache.stripprefix.prefixes=/apache"
      - "traefik.http.routers.apache.middlewares=strip-apache"
      - "traefik.http.services.apache.loadbalancer.server.port=80"
    volumes:
      - ./apacheTest3/html:/usr/local/apache2/htdocs
    networks:
      - traefik-net

  nginx1:
    image: nginx
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=PathPrefix(`/nginx`)"
      - "traefik.http.routers.nginx.entrypoints=web"
      - "traefik.http.middlewares.strip-nginx.stripprefix.prefixes=/nginx"
      - "traefik.http.routers.nginx.middlewares=strip-nginx"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
    volumes:
      - ./nginxTest1/html:/usr/share/nginx/html
    networks:
      - traefik-net

  nginx2:
    image: nginx
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=PathPrefix(`/nginx`)"
      - "traefik.http.routers.nginx.entrypoints=web"  # Use a separate entrypoint name
      - "traefik.http.middlewares.strip-nginx.stripprefix.prefixes=/nginx"
      - "traefik.http.routers.nginx.middlewares=strip-nginx"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
    volumes:
      - ./nginxTest2/html:/usr/share/nginx/html
    networks:
      - traefik-net

  nginx3:
    image: nginx
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=PathPrefix(`/nginx`)"
      - "traefik.http.routers.nginx.entrypoints=web"  # Use a separate entrypoint name
      - "traefik.http.middlewares.strip-nginx.stripprefix.prefixes=/nginx"
      - "traefik.http.routers.nginx.middlewares=strip-nginx"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
    volumes:
      - ./nginxTest3/html:/usr/share/nginx/html
    networks:
      - traefik-net


 

networks:
  traefik-net:
    driver: bridge

# volumes:
#   mongodbData:
#     driver: local
    